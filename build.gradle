plugins {
}


group 'com.github.pctf'
version '1.0-SNAPSHOT'

println "build.gradle version is: $version"

repositories {
    mavenCentral()
}

dependencies {

}

tasks.register("prepareRelease", RemoveSnapshotTask)

abstract class RemoveSnapshotTask extends DefaultTask {
    boolean versionChanged = false

    @TaskAction
    def removeSnapshotAndSetNewVersion() {
        println "Current version=${project.rootProject.version}"
        project.rootProject.version = prepareNewVersion()
        if (versionChanged)
            println "New version=${project.rootProject.version}"
    }

    def prepareNewVersion() {
        final String oldVersion = project.rootProject.version

        if (isSnapshot(oldVersion)) {
            versionChanged = true
            return removeSnapshot(oldVersion)
        } else {
            println "Version is not snapshot. Retaining old version."
            return oldVersion
        }
    }

    static def isSnapshot(version) {
        version.contains("SNAPSHOT")
    }

    private String removeSnapshot(String oldVersion) {
        def cleanVersion = buildCleanVersion(oldVersion)
        modifyVersion oldVersion, cleanVersion
        cleanVersion
    }

    private static String buildCleanVersion(String version) {
        version.substring(0, version.findIndexOf { it == "-" || it == " " })
    }

    def modifyVersion(String oldVersion, String newVersion) {
        project.rootProject
                .buildFile
                .text
                .replaceAll(oldVersion, newVersion)
                .with {
                    project.rootProject
                            .buildFile
                            .write(it)
                }
    }

}